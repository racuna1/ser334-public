#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\branch soln
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\branch blank
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.54cm
\topmargin 2.54cm
\rightmargin 2.54cm
\bottommargin 2.54cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\series bold
\size huge
SER 334 Practice Exam 3
\series default
 
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\size huge
(SOLN)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
Updated 12/2/2021
\end_layout

\begin_layout Standard
\align center

\size huge
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard
NOT FOR STUDENT DISTRIBUTION
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard
Last Name: 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rule{6cm}{0.15mm}$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First Name: 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rule{5.94cm}{0.15mm}$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Last 4 digits of ASU ID: 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rule{4.05cm}{0.15mm}$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
Exam Instructions
\end_layout

\begin_layout Standard
The exam is open one note card (3x5 inches).
  
\bar under
No electronic items are allowed.
 Write legibly.

\bar default
 Please use a pen (instead of a pencil) if you have one.
 There are 90 points available and the exam must be completed in 37.5 minutes.
 This exam has two types of questions:
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard

\series bold
Multiple choice questions:
\series default
 There are 50 points of multiple choice questions.
 An answer is selecting one option among the choices given.
 Each multiple choice is worth 2 to 5 points.
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard

\series bold
Short answer questions:
\series default
 There are 40 points of short answer questions.
 A typical answer is two or three sentences.
 Each short answer question is worth ~10 points.
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard

\series bold
Scenario questions:
\series default
 The programming questions are given near the end of the paper.
 They must be answered on the question paper.
 There are 0 points of write-in programming questions.
\end_layout

\begin_layout Standard
\begin_inset VSpace 5cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch blank
inverted 0
status open

\begin_layout Standard
\begin_inset VSpace 1cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align right
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Topic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\;\;\;\;$
\end_inset


\begin_inset Formula $\;\;$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Possible
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MC: CPU Scheduling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SA: CPU Scheduling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MC: Main Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SA: Main Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MC: Virtual Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SA: Virtual Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MC: Mass-Storage Structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SA: Mass-Storage Structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
90
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
CPU Scheduling [25 points]
\end_layout

\begin_layout Enumerate
Would it make sense to use a periodic scheduler for a system where new jobs
 are created all the time? Explain.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
Yes.
 Periodic schedulers use preemption to ensure that no matter how many jobs
 are running, all will meet their deadlines.
\end_layout

\begin_layout Enumerate
Yes.
 Periodic schedulers are meant to receive new jobs periodically.
\end_layout

\begin_layout Enumerate
No.
 Periodic schedulers need to know exactly what will run in order to schedule
 jobs so that they won't miss their deadline.
 
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
No.
 Periodic schedulers only support threads, not processes.
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
No.
 Periodic schedulers are about regularity: we simply can't do reliable schedulin
g if we don't know exactly what will run.
 We can't check if a set of periodic tasks can be scheduled before execution
 since introducing arbitrary new jobs at run-time may cause processes to
 miss their deadlines.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider the following set of processes (tuples look like process, burst
 size): (P0, 10), (P1, 30), (P2, 15), (P3, 5).
 Assume the processes arrive in this order as well.
 Compute the average waiting time for First-Come First-Served.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
60/4
\end_layout

\begin_layout Enumerate
155/4
\end_layout

\begin_layout Enumerate
105/4 
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
165/4
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Order: P0, P1, P2, P3
\end_layout

\begin_layout Plain Layout

Seq: P0[10], P1[30], P2[15], P3[5]
\end_layout

\begin_layout Plain Layout

     0    10      40       55    60
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

AWT: (0+10+40+55) / 4 = 105/4
\end_layout

\begin_layout Plain Layout

ATT: (10+40+55+60) / 4 = 165/4
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider the following set of processes (tuples look like process, burst
 size): (P0, 10), (P1, 30), (P2, 15), (P3, 5).
 Assume the processes arrive in this order as well.
 Compute the average turnaround time for Round Robin Scheduling (use time
 quantum 10).
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
95/4
\end_layout

\begin_layout Enumerate
60/4
\end_layout

\begin_layout Enumerate
120/4
\end_layout

\begin_layout Enumerate
155/4 
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Order: P0, P1, P2, P3, P1, P2, P1
\end_layout

\begin_layout Plain Layout

Seq: P0[10], P1[10], P2[10], P3[5], P1[10], P2[5], P1[10]
\end_layout

\begin_layout Plain Layout

    0       10      20      30    35      45     50      60
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

AWT: (0+30+35+30) / 4 = 95/4
\end_layout

\begin_layout Plain Layout

ATT: (10+60+50+35) / 4 = 155/4
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
In a multi-level feedback queue, why does the first queue typically use
 a smaller time quantum than the later ones? (That is, what does that design
 choice maximize.) [10 points] 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
FC17 Final
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch blank
inverted 0
status collapsed

\begin_layout Standard
\begin_inset VSpace 4cm
\end_inset


\end_layout

\end_inset


\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Ans:
\end_layout

\begin_layout Standard
The idea is to let smaller jobs complete first without interference from
 long jobs.
 Longer jobs need to be split up into many different bursts and effectively
 saturate the CPU because the proportion of computation time is longer than
 for short jobs.
 Longer jobs filter down into longer time quantum queues, where they will
 be naturally completed after short running jobs, and where fewer context
 switches will be required.
\end_layout

\begin_layout Standard
This optimizes for throughput.
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
Main Memory [20 points]
\end_layout

\end_deeper
\begin_layout Enumerate
Assume that we use a 32-bit unsigned integer to represent logical addresses,
 within which there are bits for a page number and bits for an offset.
 Does the choice of how many bits are used for each (offset or page number),
 impact the size of the logical address space? Explain.
 (Keep in mind that if n bits are used for offset then 32-n will be used
 for page number.)  [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
No.
 Regardless of n and m, the address is 32-bit which means it addresses 
\begin_inset Formula $2^{32}$
\end_inset

 locations.
 
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
No.
 The number of bits used for n and m must be the same in order to page the
 memory, which means there is only one possible size of the logical address
 space, 
\begin_inset Formula $2^{32}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Yes.
 If more bits are chosen for the page number (m), then there will be more
 pages meaning a larger logical address space.
\end_layout

\begin_layout Enumerate
Yes.
 If more bits are chosen for the offset (n), pages will need to store more
 data meaning a larger logical address space.
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
No - regardless of n and m, 32-bits will always be used.
 From the point of view of a program, n and m don't matter, it just sees
 a 32-bit number (address) which addresses 
\begin_inset Formula $2^{32}$
\end_inset

 locations.
 Reducing the size of the offset will increase the size of the page number.
 And vice-versa, so that no matter the choice of n or m, 
\begin_inset Formula $2^{32}$
\end_inset

 memory locations will be addressable.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider a system where addresses are 6-bits.
 Let the page offset (
\emph on
n
\emph default
) be 4.
 Addresses look like [pd], where p is page number and d is page offset.
 What page and offset would decimal address 45 page into? [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
Decimal page 14, decimal offset 3
\end_layout

\begin_layout Enumerate
Decimal page 2, decimal offset 13 
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Decimal page 11, decimal offset 1
\end_layout

\begin_layout Enumerate
Decimal page 1, decimal offset 12
\end_layout

\end_deeper
\begin_layout Enumerate
Why is having both logical and physical addresses necessary in an operating
 system - why are both needed? Can't they be the same? Explain.
 [10 points]
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch blank
inverted 0
status collapsed

\begin_layout Standard
\begin_inset VSpace 4cm
\end_inset


\end_layout

\end_inset


\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Ans:
\end_layout

\begin_layout Standard
Yes, both are needed.
 We need to decouple (i.e., virtualize) the memory that a program sees, and
 what exists on hardware.
 Otherwise, we get tricky situations where programs can't run at the same
 time.
 (As a modern OS, we expect that concurrency is a core feature.) For example:
 two different programs might assume they are loaded at address 0.
 Since both will be expecting to use specific addresses, but there exists
 only one physical place with that address, programs will override one another.
\end_layout

\begin_layout Standard
\begin_inset VSpace 2cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
Virtual Memory [25 points]
\end_layout

\end_deeper
\begin_layout Enumerate
Dealing with a page fault is expensive and something to avoid.
 In addition to carefully maintaining our active frames, we can also avoid
 page faults by wisely picking which parts of a process should be initially
 loaded.
 How might we pick which to initially load? Select the best choice from
 the options given.
 Assume that you cannot load the entire process and you want to select the
 most worthwhile pages.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
Do not load anything.
 It is not possible to avoid page faults so it would be a waste to load
 pages that are not requested.
\end_layout

\begin_layout Enumerate
Load the header, initial code and standard libraries.
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Load all libraries the process uses since libraries are referenced so often.
\end_layout

\begin_layout Enumerate
Load all static variables.
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
Load the header, and anything up until the first jump operation in main.
 Maybe grab standard libraries too.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider the following reference string for page lookups: 7, 5, 9, 5, 6,
 7, 9.
 Compute the number of page faults that would occur with FIFO assuming 3
 pages may be kept in memory.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
3
\end_layout

\begin_layout Enumerate
4
\end_layout

\begin_layout Enumerate
5
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
6
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RefStr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Page Faults: 5
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider the following reference string for page lookups: 7, 5, 9, 5, 6,
 7, 9.
 Compute the number of page faults that would occur with OPR assuming 3
 pages may be kept in memory.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
3
\end_layout

\begin_layout Enumerate
4
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
5
\end_layout

\begin_layout Enumerate
6
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RefStr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Page Faults: 4
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
[Silberschatz] Assume that a program has just referenced an address in virtual
 memory.
 Describe a scenario in which a TLB miss occurs with no page fault.
 If no such scenario can occur, explain why.
 [10 points]
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch blank
inverted 0
status collapsed

\begin_layout Standard
\begin_inset VSpace 4cm
\end_inset


\end_layout

\end_inset


\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Ans:
\end_layout

\begin_layout Standard
[Pilcher] If a TLB miss occurs, that means that the page requested is not
 in main memory.
 In order to access the page requested, it is necessary to retrieve the
 page from virtual memory (creating a page fault) to place in main memory.
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
Mass-Storage Structure [20 points]
\end_layout

\end_deeper
\begin_layout Enumerate
[Silberschatz 10.10 edited] Why do SSDs often use a FCFS disk-scheduling
 algorithm? Justify.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
FCFS is used since it can be implemented with a linked list structure.
\end_layout

\begin_layout Enumerate
Accessing data on a SSD takes random time intervals so FCFS does just as
 well as any other disk-scheduling algorithm.
\end_layout

\begin_layout Enumerate
FCFS is used to allow keeping data in the same memory location on the SSD.
\end_layout

\begin_layout Enumerate
Since there are no moving parts to optimize, so FCFS would be picked since
 it is fast and easy to implement.
 
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
They're solid state - there are no moving parts to optimize for movement,
 so the schedulers don't help.
 FCFS would be picked from the standpoint that it is fast and simple to
 implement.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider using the SSTF disk scheduling algorithm on the cylinder blocks
 19, 1, 98, 75, 92, 38, 47, 18.
 How far would the disk head need to travel? Assume the disk head is initially
 at 25, and that the disk has cylinders 1 to 100.
 [5 points]
\end_layout

\begin_deeper
\begin_layout Enumerate
100
\end_layout

\begin_layout Enumerate
121
\begin_inset Branch soln
inverted 0
status collapsed

\begin_layout Standard

\series bold
ANS
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
125
\end_layout

\begin_layout Enumerate
133
\end_layout

\begin_layout Standard
\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Notes:
\end_layout

\begin_layout Standard
Order: 25,19,18,1,38,47,75,92,98
\end_layout

\begin_layout Standard
Travel amount: 6+1+17+37+9+28+17+6=121
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
What impact does HDD storage capacity have on HDD read/write speed? Say
 for a 2TB vs 3TB drive, both standard 3.5
\begin_inset Quotes erd
\end_inset

 drives.
 Assume that the number of platters stay the same.
 [10 points] 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
SC18 final exam.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch blank
inverted 0
status collapsed

\begin_layout Standard
\begin_inset VSpace 4cm
\end_inset


\end_layout

\end_inset


\begin_inset Branch soln
inverted 0
status open

\begin_layout Standard

\series bold
Staff Ans:
\end_layout

\begin_layout Standard
The drive with the higher storage capacity will typically be faster.
 A couple of reasons: higher density means more data is read with less movement.
 Higher capacity also means that it will (potentially) be less fragmented.
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Short Answer: Network Programming, Security [2 points]
\end_layout

\begin_layout Enumerate
[Silberschatz 15.2] A password may become known to other users in a variety
 of ways.
 Is there a simple method for detecting that such an event has occurred?
 Explain your answer.
 [2 points]
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset VSpace 5cm
\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
